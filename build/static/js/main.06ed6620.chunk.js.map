{"version":3,"sources":["images/logo.jpg","jsx/charts/btc.jsx","jsx/charts/ltc.jsx","jsx/charts/xrp.jsx","jsx/element/page-title.jsx","jsx/layout/header2.jsx","jsx/layout/sidebar.jsx","jsx/pages/exchange.jsx","jsx/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","BtcChart","props","state","series","name","data","options","chart","height","type","zoom","enabled","toolbar","show","dataLabels","stroke","curve","width","colors","grid","tooltip","x","format","xaxis","categories","axisBorder","labels","yaxis","this","Component","LtcChart","XrpChart","PageTitle","useState","addr","setAddr","useEffect","window","localStorage","getItem","className","Header2","useMetaMask","connect","account","chainId","status","ethereum","_btnConnect","_setBtnConnect","_acc","_cutAcc","substr","_connectFunc","clear","then","r","length","setItem","location","reload","catch","e","to","href","src","require","alt","value","placeholder","onClick","navigator","clipboard","writeText","style","cursor","id","marginLeft","Sidebar","target","Date","getFullYear","monthNames","web3","Web3","Dashboard","fromToken","setFromToken","bnbCost","setBnbCost","ethInitial","setEthInitial","rptCost","setRptCost","usdCost","setUsdCost","bnbInitial","setBnbInitial","btnText","setBtnText","btnText2","setBtnText2","hash2","setHash2","setTrBool","loader","setLoader","trHash","setTrHash","_alert","msg","toast","rptTousd","fetch","response","json","price","_val","parseInt","_bnb","toFixed","_usd","console","log","_sendTokenRaw","hash","eth","getTransaction","rs","_data","svalue","utils","fromWei","method","body","JSON","stringify","headers","rex","rx","alert","active","spinner","text","onChange","t","min","maxLength","disabled","acc","a","request","params","from","toHex","toWei","toString","chainID","txHash","setTimeout","error","message","transferBuy","overflow","getUTCDate","getUTCMonth","getMinutes","getHours","Index","basename","path","exact","component","App","theme","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"iLAAAA,EAAOC,QAAU,IAA0B,kC,0mBC+E5BC,E,kDAxEX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CAETC,OAAQ,CAAC,CACLC,KAAM,WACNC,KAAM,CAAC,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAErFC,QAAS,CACLC,MAAO,CACHC,OAAQ,IACRC,KAAM,OACNC,KAAM,CACFC,SAAS,GAGbC,QAAS,CACLC,MAAM,IAGdC,WAAY,CACRH,SAAS,GAEbI,OAAQ,CACJC,MAAO,SACPC,MAAO,EACPC,OAAQ,CAAC,YAEbC,KAAM,CACFN,MAAM,GAEVO,QAAS,CACLT,SAAS,EACTU,EAAG,CACCC,OAAQ,gBAGhBC,MAAO,CACHC,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACpIC,WAAY,CACRZ,MAAM,GAGVa,OAAQ,CACJb,MAAM,IAGdc,MAAO,CACHD,OAAQ,CACJb,MAAM,MAlDP,E,0CA6DnB,WACI,OAGI,kBAAC,IAAD,CAAgBP,QAASsB,KAAK1B,MAAMI,QAASH,OAAQyB,KAAK1B,MAAMC,OAAQM,KAAK,OAAOD,OAAQ,U,GAlEjFqB,aCyERC,E,kDAxEX,WAAY7B,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CAETC,OAAQ,CAAC,CACLC,KAAM,WACNC,KAAM,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAElFC,QAAS,CACLC,MAAO,CACHC,OAAQ,IACRC,KAAM,OACNC,KAAM,CACFC,SAAS,GAGbC,QAAS,CACLC,MAAM,IAGdC,WAAY,CACRH,SAAS,GAEbI,OAAQ,CACJC,MAAO,SACPC,MAAO,EACPC,OAAQ,CAAC,YAEbC,KAAM,CACFN,MAAM,GAEVO,QAAS,CACLT,SAAS,EACTU,EAAG,CACCC,OAAQ,gBAGhBC,MAAO,CACHC,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACpIC,WAAY,CACRZ,MAAM,GAGVa,OAAQ,CACJb,MAAM,IAGdc,MAAO,CACHD,OAAQ,CACJb,MAAM,MAlDP,E,0CA6DnB,WACI,OAGI,kBAAC,IAAD,CAAgBP,QAASsB,KAAK1B,MAAMI,QAASH,OAAQyB,KAAK1B,MAAMC,OAAQM,KAAK,OAAOD,OAAQ,U,GAlEjFqB,aCyERE,E,kDAxEX,WAAY9B,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CAETC,OAAQ,CAAC,CACLC,KAAM,WACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAE/EC,QAAS,CACLC,MAAO,CACHC,OAAQ,IACRC,KAAM,OACNC,KAAM,CACFC,SAAS,GAGbC,QAAS,CACLC,MAAM,IAGdC,WAAY,CACRH,SAAS,GAEbI,OAAQ,CACJC,MAAO,SACPC,MAAO,EACPC,OAAQ,CAAC,YAEbC,KAAM,CACFN,MAAM,GAEVO,QAAS,CACLT,SAAS,EACTU,EAAG,CACCC,OAAQ,gBAGhBC,MAAO,CACHC,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACpIC,WAAY,CACRZ,MAAM,GAGVa,OAAQ,CACJb,MAAM,IAGdc,MAAO,CACHD,OAAQ,CACJb,MAAM,MAlDP,E,0CA6DnB,WACI,OAGI,kBAAC,IAAD,CAAgBP,QAASsB,KAAK1B,MAAMI,QAASH,OAAQyB,KAAK1B,MAAMC,OAAQM,KAAK,OAAOD,OAAQ,U,GAlEjFqB,aCmBRG,MAvBf,WAEI,MAAwBC,mBAAS,yBAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,qBAAU,WACND,EAASE,OAAOC,aAAaC,QAAQ,WAAYF,OAAOC,aAAaC,QAAQ,WAAY,2BAC1F,IAGC,oCACI,yBAAKC,UAAU,cACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aAAf,mBACqBN,Q,wBC4E9BO,MAtFf,WAAoB,IAAD,EAKf,EAAsDC,wBAA7BC,GAAzB,EAAOC,QAAP,EAAgBC,QAAhB,EAAyBF,SAAmBG,GAA5C,EAAkCC,SAAlC,EAA4CD,QAE5C,EAAsCb,mBAAS,kBAA/C,mBAAOe,EAAP,KAAoBC,EAApB,KAEAb,qBAAU,WACN,IAAIc,EAAQb,OAAOC,aAAaC,QAAQ,WACxC,GAAGW,EAAK,CACJ,IAAIC,EAAUD,EAAKE,OAAO,EAAG,IAAM,MACnCH,EAAeE,MAEpB,CAACL,IAGJ,IAAMO,EAAe,WACL,iBAATP,GACCR,aAAagB,QAEjBL,EAAe,iBACfN,IAAUY,MAAK,SAAAC,GACX,GAAIA,EAAEC,OAAS,EAAG,CACdpB,OAAOC,aAAaoB,QAAQ,UAAWF,EAAE,IACzC,IACIL,EADOK,EAAE,GACMJ,OAAO,EAAG,IAAM,MACnCH,EAAeE,GACfd,OAAOsB,SAASC,cAEhBX,EAAe,wBAEpBY,OAAM,SAAAC,GACLb,EAAe,oBAIvB,OACI,oCACI,yBAAKT,UAAU,oBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,qEAEX,yBAAKA,UAAU,2CACX,kBAAC,IAAD,CAAMuB,GAAI,GAAIvB,UAAU,kBAAkBwB,KAAK,IAC3C,yBAAKC,IAAKC,EAAQ,KAA4BC,IAAI,GAAGlD,MAAM,QAE/D,yBAAKuB,UAAU,eACX,2BAAO/B,KAAK,OAAO+B,UAAU,eACtB4B,MAAO,6CACPC,YAAY,uBACnB,yBAAKC,QAAS,WACVC,UAAUC,UAAUC,UAAU,+CAC/BC,MAAO,CAACC,OAAQ,WAAYnC,UAAU,sBACrC,0BAAMA,UAAU,mBAAmBoC,GAAG,gBAAe,uBAAGpC,UAAU,iBAEtE,4BAAKkC,MAAM,kBAAkBJ,QAASjB,GAAtC,sBACY,CAACsB,OAAQ,UAAWE,WAAY,KAD5C,0BAC2D,sBAD3D,GAEI,0BAAMrC,UAAU,mBAAmBoC,GAAG,gBAAe,uBAAGpC,UAAU,mBAjBlF,IAsBI,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,+CACX,4BACI8B,QAAS,kBAAMjB,KACf5C,KAAK,SACLL,KAAK,SACLoC,UAAU,yBACTQ,YCnC9B8B,MAvCf,WAEI,OACI,oCACI,yBAAKtC,UAAU,WACX,kBAAC,IAAD,CAAMA,UAAU,aAAauB,GAAI,aAC7B,yBAAKW,MAAO,CAACzD,MAAQ,KAAMgD,IAAK,qEAAsEE,IAAI,KAC1G,+CAEJ,yBAAK3B,UAAU,QACX,4BACI,4BACI,kBAAC,IAAD,CAAMuB,GAAI,aACN,8BAAM,uBAAGvB,UAAU,oBACnB,0BAAMA,UAAU,YAAhB,cAGR,4BAAI,kBAAC,IAAD,CAAMuC,OAAQ,SAAUhB,GAAI,4BAC5B,8BAAM,uBAAGvB,UAAU,iBACnB,0BAAMA,UAAU,YAAhB,wBAKZ,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAAMuC,OAAQ,SAAUhB,GAAI,yCAAyC,uBAAGvB,UAAU,qBAClF,kBAAC,IAAD,CAAMuC,OAAQ,SAAUhB,GAAI,mCAAmC,uBAAGvB,UAAU,mBAC5E,kBAAC,IAAD,CAAMuC,OAAQ,SAAUhB,GAAI,yCAAyC,uBAAGvB,UAAU,qBAEtF,yBAAKA,UAAU,cAAf,SACO,IAAIwC,MAAOC,cADlB,sB,oCCvBdC,EAAa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAChE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAItDC,EAAO,IAAIC,IAAK,yCA4aLC,MA1af,WAEI,IAGA,EAAkCpD,mBAAS,OAA3C,mBAAOqD,EAAP,KAAkBC,EAAlB,KACA,EAA8BtD,mBAAS,UAAvC,mBAAOuD,EAAP,KAAgBC,EAAhB,KACA,EAAoCxD,mBAAS,WAA7C,mBAAOyD,EAAP,KAAmBC,EAAnB,KACA,EAA8B1D,mBAAS,GAAvC,mBAAO2D,EAAP,KAAgBC,EAAhB,KACA,EAA8B5D,mBAAS,GAAvC,mBAAO6D,EAAP,KAAgBC,EAAhB,KACA,EAAoC9D,mBAAS,GAA7C,mBAAO+D,EAAP,KAAmBC,EAAnB,KACA,EAA8BhE,mBAAS,gBAAvC,mBAAOiE,EAAP,KAAgBC,EAAhB,KACA,EAAgClE,mBAAS,wBAAzC,mBAAOmE,EAAP,KAAiBC,EAAjB,KACA,EAA0BpE,mBAAS,IAAnC,mBAAOqE,EAAP,KAAcC,EAAd,KACA,EAA4BtE,oBAAS,GAArC,oBAAeuE,IAAf,aACA,GAA4BvE,oBAAS,GAArC,qBAAOwE,GAAP,MAAeC,GAAf,MACA,GAA4BzE,oBAAS,GAArC,qBAAO0E,GAAP,MAAeC,GAAf,MAEMC,GAAS,SAACC,GAAD,OAASC,YAAMD,IAG9B,GAAsDpE,wBAA/CE,GAAP,GAAOA,QAASC,GAAhB,GAAgBA,QAASF,GAAzB,GAAyBA,QAASI,GAAlC,GAAkCA,SAAlC,GAA4CD,OAE5CV,qBAAU,WACN4E,GAAS,CAACjC,OAAQ,CAACX,MAAO,MAE1B6C,MAAM,8DACD1D,MAAK,SAAA2D,GAAQ,OAAIA,EAASC,UAC1B5D,MAAK,SAAAlD,GACF4F,EAAc5F,EAAK+G,UAG3BH,MAAM,8DACD1D,MAAK,SAAA2D,GAAQ,OAAIA,EAASC,UAC1B5D,MAAK,SAAAlD,GACFsF,EAActF,EAAK+G,YAG5B,IAEH,IAAMJ,GAAW,SAAClD,GACd,IACI,IAAIuD,EAAOC,SAASxD,EAAEiB,OAAOX,OACzBmD,GAAQF,EAAOrB,GAAYwB,QAAQ,GACnCC,EAAOJ,EAEXxB,EAAWwB,GACX5B,EAAW8B,GACXxB,EAAW0B,GACb,MAAO3D,GAEL4D,QAAQC,IAAI,WAKdC,GAAgB,SAACC,GACnB1C,EAAK2C,IAAIC,eAAeF,GAAMtE,MAAK,SAAAyE,GAE/B,IAAIC,EAAK,aAAIjC,aAAYkC,OAAS/C,EAAKgD,MAAMC,QAAQJ,EAAG5D,OAAS4B,GAAgBgC,GAEjF3B,EAAY,qBACZY,MAAM,6CAA8C,CAChDoB,OAAQ,OACRC,KAAMC,KAAKC,UAAUP,GACrBQ,QAAS,CACL,eAAgB,sBAErBlF,MAAK,SAAAmF,GAAG,OAAIA,EAAIvB,UAAQ5D,MAAK,SAAAoF,GAE5B9B,GAAO,gEACPa,QAAQC,IAAIgB,EAAGtI,MACfqG,IAAU,GACVkC,MAAM,wFACNvC,EAAY,2BACbxC,OAAM,SAAAC,GACL4D,QAAQC,IAAI7D,GACZ4C,IAAU,GACVG,GAAO,iCAGZhD,OAAM,SAAAC,GACL4D,QAAQC,IAAI7D,GACZ+C,GAAO,sDA0Ef,OACI,oCACI,kBAAC,IAAD,CACIgC,OAAQpC,GACRqC,SAAO,EACPC,KAAK,wCACL,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKvG,UAAU,gBACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,cAAd,aAEJ,yBAAKA,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,QACX,2BAAOA,UAAU,WAAjB,gBAGA,yBAAKA,UAAU,oBACX,4BAAQ4B,MAAO,MAAO4E,SAjGlE,SAACC,GACb1D,EAAa0D,EAAElE,OAAOX,QAgG2EhE,KAAK,SACtCoC,UAAU,gBACd,4BAAQ4B,MAAM,OAAd,oBAGA,4BAAQA,MAAM,OAAd,yBAOZ,yBAAK5B,UAAU,QACX,2BAAOA,UAAU,WAAjB,cAGA,yBAAKA,UAAU,oBACX,4BAAQ4B,MAAO,MAAO5B,UAAU,eACxBpC,KAAK,UAAU4I,SAAU,cAE7B,4BAAQ5E,MAAM,OAAd,sBAGA,4BAAQA,MAAM,OAAd,uBAOZ,yBAAK5B,UAAU,QACX,2BAAOA,UAAU,WAAjB,qBAGA,yBAAKA,UAAU,eACX,2BACI0G,IAAK,GACL9E,MAAOwB,EACPuD,UAAW,GACXH,SAAU,SAACC,GAAD,OAAOjC,GAASiC,IAC1BxI,KAAK,SACLL,KAAK,aACLoC,UAAU,eACV6B,YAAY,UAEhB,2BACID,MAAOoB,EACP4D,UAAU,EACV3I,KAAK,SACLL,KAAK,aACLoC,UAAU,eACV6B,YAAY,UAEhB,2BACID,MAAO0B,EACPqD,UAAW,GACXH,SAAU,SAACC,GAAD,OAAOjC,GAASiC,IAC1BxI,KAAK,SACLL,KAAK,aACLoC,UAAU,eACV6B,YAAY,WAGpB,6BAEJ,4BACIC,QAAS,kBA/J7C,WAChB,GAAIsB,EA1FM,GA2FNiB,GAAO,mEAGX,GAAkB,QAAdvB,EAAJ,CAIAa,EAAW,kBACX,IACIxD,KAAUY,KAAV,uCAAe,WAAO8F,GAAP,SAAAC,EAAA,sDACK,SAAZzG,IAAkC,OAAZA,GAEtBE,GAASwG,QAAQ,CACblB,OAAQ,sBACRmB,OAAQ,CACJ,CACIC,KAAM7G,GACNmB,GA3GN,6CA4GMK,MAAOe,EAAKgD,MAAMuB,MAAMvE,EAAKgD,MAAMwB,MAAMnE,EAAQoE,WAAY,UAC7DC,QAAS,OAGlBtG,MAAK,SAACuG,GAELtD,IAAU,GACVI,GAAUkD,GACV3D,EAAW,cACXU,GAAO,gDACPA,GAAO,qDAEPH,IAAU,GACVqD,YAAW,WACPnC,GAAckC,KACf,QACJjG,OAAM,SAACmG,GACN7D,EAAW,gBACXU,GAAOmD,EAAMC,YAIjBpD,GAAO,8CA/BA,2CAAf,uDAiCGhD,OAAM,SAACC,GACN+C,GAAO,mCACPa,QAAQC,IAAI7D,MAGlB,MAAOA,GACL+C,GAAO,8BA5CPA,GAAO,yDAyJwDqD,IACfzJ,KAAK,SACLL,KAAK,SACLoC,UAAU,mCACT0D,QAQzB,yBAAK1D,UAAU,gCACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,cAAd,cACgB,MAGpB,yBAAKA,UAAU,aACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,iBACRmE,GAAU,wBAAInE,UAAU,UAC1B,0BAAMA,UAAU,cACZ,uBAAGA,UAAU,8BAEb,yBAAKA,UAAU,cAAckC,MAAO,CAACyF,SAAU,WAC3C,2BACI,gCACK,IAAInF,MAAOoF,aAAe,IAAMlF,GAAW,IAAIF,MAAOqF,eAD3D,IAC4E,IAD5E,IACkF,KAC7E,IAAIrF,MAAOC,cAAe,KAE/B,gCACK,IAAID,MAAOsF,aAAe,KAAM,IAAItF,MAAOuF,aAGpD,uBAAG/H,UAAU,4BACT,8BAAOmE,OAGX,OASxB,yBAAKnE,UAAU,QACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,cAAd,wBAKJ,yBAAKA,UAAU,aACX,yBAAKA,UAAU,QACX,2BAAOA,UAAU,WAAjB,mBAGA,yBAAKA,UAAU,eACX,2BACI4B,MAAOkC,EACP0C,SAAU,SAAAlF,GAAC,OAAIyC,EAASzC,EAAEiB,OAAOX,QACjCQ,GAAI,QACJnE,KAAK,OACL+B,UAAU,eACV6B,YAAY,cAIxB,4BACIC,QAAS,kBA/KrD+B,EAAY,uBACRC,EAAMsD,WAAWnG,OAAS,EAC1BmE,GAActB,IAEdD,EAAY,wBACZQ,GAAO,4BA2KiCpG,KAAK,SACLL,KAAK,SACLoC,UAAU,mCACT4D,SAW7B,yBAAK5D,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,qDACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,cACX,wBAAIA,UAAU,4BAAd,wBAIJ,mCACS8E,SAAS,OAGtB,kBAAC,EAAD,SAIZ,yBAAK9E,UAAU,YACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,qDACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,cACX,wBAAIA,UAAU,4BAAd,qBAIJ,mCACS8E,SAAStB,KAGtB,kBAAC,EAAD,SAIZ,yBAAKxD,UAAU,YACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,qDACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,cACX,wBAAIA,UAAU,4BAAd,aAIJ,mCACS8E,SAAS5B,KAGtB,kBAAC,EAAD,SAIZ,yBAAKlD,UAAU,YACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,qDACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,cACf,8BACI,uBAAGA,UAAU,iBAEb,wBAAIA,UAAU,4BAAd,gBAIJ,qCACW,MAGf,kBAAC,EAAD,mBCzZzCgI,E,4JAhBX,WACI,OACI,oCAEI,kBAAC,IAAD,CAAeC,SAAS,aACpB,yBAAK7F,GAAG,gBACJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO8F,KAAK,IAAIC,OAAK,EAACC,UAAWvF,Y,GARzCxD,a,gBCmBLgJ,MAbf,WACI,OACI,yBAAKrI,UAAU,OACX,kBAAC,mBAAD,KACI,kBAAC,EAAD,MACA,kBAAC,SAAD,MACA,kBAAC,IAAD,CAAgBsI,MAAO,OAAQC,SAAS,aAAaC,UAAW,IAAMC,iBAAiB,EACvEC,aAAa,EAAOC,cAAc,OCJ9CC,QACW,cAA7B/I,OAAOsB,SAAS0H,UAEe,UAA7BhJ,OAAOsB,SAAS0H,UAEhBhJ,OAAOsB,SAAS0H,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBnH,WACrBA,UAAUoH,cAAcC,MAAMrI,MAAK,SAAAsI,GACjCA,EAAaC,kB","file":"static/js/main.06ed6620.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.bc2d9fe0.jpg\";","\r\nimport React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\n\r\n\r\nclass BtcChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            series: [{\r\n                name: \"Desktops\",\r\n                data: [200, 410, 385, 51, 49, 662, 69, 91, 890, 100, 41, 35, 51, 49, 62, 69, 91, 80]\r\n            }],\r\n            options: {\r\n                chart: {\r\n                    height: 100,\r\n                    type: 'line',\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n\r\n                    toolbar: {\r\n                        show: false,\r\n                    }\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    width: 2,\r\n                    colors: [\"#F7931A\"],\r\n                },\r\n                grid: {\r\n                    show: false,\r\n                },\r\n                tooltip: {\r\n                    enabled: false,\r\n                    x: {\r\n                        format: \"dd MMM yyyy\"\r\n                    },\r\n                },\r\n                xaxis: {\r\n                    categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\r\n                    axisBorder: {\r\n                        show: false\r\n                    },\r\n\r\n                    labels: {\r\n                        show: false\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    labels: {\r\n                        show: false\r\n                    }\r\n                },\r\n            },\r\n\r\n\r\n        };\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n\r\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"line\" height={100} />\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default BtcChart;","\r\nimport React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\n\r\n\r\nclass LtcChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            series: [{\r\n                name: \"Desktops\",\r\n                data: [100, 441, 35, 51, 33, 62, 69, 91, 800, 10, 41, 35, 51, 10, 62, 69, 91, 80]\r\n            }],\r\n            options: {\r\n                chart: {\r\n                    height: 100,\r\n                    type: 'line',\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n\r\n                    toolbar: {\r\n                        show: false,\r\n                    }\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    width: 2,\r\n                    colors: [\"#A5A8A9\"],\r\n                },\r\n                grid: {\r\n                    show: false,\r\n                },\r\n                tooltip: {\r\n                    enabled: false,\r\n                    x: {\r\n                        format: \"dd MMM yyyy\"\r\n                    },\r\n                },\r\n                xaxis: {\r\n                    categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\r\n                    axisBorder: {\r\n                        show: false\r\n                    },\r\n\r\n                    labels: {\r\n                        show: false\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    labels: {\r\n                        show: false\r\n                    }\r\n                },\r\n            },\r\n\r\n\r\n        };\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n\r\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"line\" height={100} />\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default LtcChart;","\r\nimport React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\n\r\n\r\nclass XrpChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            series: [{\r\n                name: \"Desktops\",\r\n                data: [10, 41, 35, 51, 49, 62, 69, 91, 80, 10, 41, 35, 51, 49, 62, 69, 91, 80]\r\n            }],\r\n            options: {\r\n                chart: {\r\n                    height: 100,\r\n                    type: 'line',\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n\r\n                    toolbar: {\r\n                        show: false,\r\n                    }\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    width: 2,\r\n                    colors: [\"#346AA9\"],\r\n                },\r\n                grid: {\r\n                    show: false,\r\n                },\r\n                tooltip: {\r\n                    enabled: false,\r\n                    x: {\r\n                        format: \"dd MMM yyyy\"\r\n                    },\r\n                },\r\n                xaxis: {\r\n                    categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\r\n                    axisBorder: {\r\n                        show: false\r\n                    },\r\n\r\n                    labels: {\r\n                        show: false\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    labels: {\r\n                        show: false\r\n                    }\r\n                },\r\n            },\r\n\r\n\r\n        };\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n\r\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"line\" height={100} />\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default XrpChart;","import React, {useEffect, useState} from 'react';\r\n\r\nfunction PageTitle() {\r\n\r\n    const [addr, setAddr] = useState('Please connect wallet');\r\n\r\n    useEffect(()=>{\r\n        setAddr((window.localStorage.getItem('account'))?window.localStorage.getItem('account'): 'Please connect wallet');\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"page_title\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12\">\r\n                            Wallet Address: {addr}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PageTitle;","import React, {useEffect, useState} from 'react';\r\nimport {DropdownButton} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {toast} from \"react-toastify\";\r\nimport {useMetaMask} from \"metamask-react\";\r\n\r\nfunction Header2() {\r\n\r\n    const _alert = (msg) => toast(msg);\r\n\r\n    //meta mask fuc\r\n    const {account, chainId, connect, ethereum, status} = useMetaMask();\r\n\r\n    const [_btnConnect, _setBtnConnect] = useState('Connect Wallet');\r\n\r\n    useEffect(() => {\r\n        let _acc =  window.localStorage.getItem('account');\r\n        if(_acc){\r\n            let _cutAcc = _acc.substr(0, 16) + \"...\";\r\n            _setBtnConnect(_cutAcc);\r\n        }\r\n    }, [status]);\r\n\r\n    //connect button\r\n    const _connectFunc = () => {\r\n        if(status===\"disconnected\"){\r\n            localStorage.clear();\r\n        }\r\n        _setBtnConnect('Connecting...');\r\n        connect().then(r => {\r\n            if (r.length > 0) {\r\n                window.localStorage.setItem('account', r[0]);\r\n                let _acc = r[0];\r\n                let _cutAcc = _acc.substr(0, 16) + \"...\";\r\n                _setBtnConnect(_cutAcc);\r\n                window.location.reload();\r\n            } else {\r\n                _setBtnConnect('Re-connect Wallet');\r\n            }\r\n        }).catch(e => {\r\n            _setBtnConnect('Re-connected');\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"header dashboard\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12\">\r\n                            <nav className=\"navbar navbar-expand-lg navbar-light px-0 justify-content-between\">\r\n                                {/* <Link className=\"navbar-brand\" to={'/'}><img src={require('./../../images/logo.png')} alt=\"\" /></Link> */}\r\n                                <div className=\"header-search d-flex align-items-center\">\r\n                                    <Link to={''} className=\"brand-logo me-3\" href=\"\">\r\n                                        <img src={require('./../../images/logo.jpg')} alt=\"\" width=\"30\"/>\r\n                                    </Link>\r\n                                    <div className=\"input-group\">\r\n                                        <input type=\"text\" className=\"form-control\"\r\n                                               value={'0xef6d440a96A5d384315114F0994a060A17802B3b'}\r\n                                               placeholder=\"contract address: \"/>\r\n                                        <div onClick={()=>{\r\n                                            navigator.clipboard.writeText(\"0xef6d440a96A5d384315114F0994a060A17802B3b\");\r\n                                        }} style={{cursor: 'pointer'}} className=\"input-group-append\">\r\n                                            <span className=\"input-group-text\" id=\"basic-addon2\"><i className=\"fa fa-copy\"></i></span>\r\n                                        </div>\r\n                                        <div style='cursor: pointer' onClick={_connectFunc}\r\n                                             style={{cursor: 'pointer', marginLeft: 10}} className=\"input-group-append\">\r\n                                            <span className=\"input-group-text\" id=\"basic-addon2\"><i className=\"fa fa-link\"></i></span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>s\r\n\r\n                                <div className=\"dashboard_log my-2\">\r\n                                    <div className=\"d-flex align-items-center d-none d-lg-block\">\r\n                                        <button\r\n                                            onClick={() => _connectFunc()}\r\n                                            type=\"submit\"\r\n                                            name=\"submit\"\r\n                                            className=\"btn btn-success w-100\">\r\n                                            {_btnConnect}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header2;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction Sidebar() {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"sidebar\">\r\n                <Link className=\"brand-logo\" to={\"/exchange\"}>\r\n                    <img style={{width:  100}} src={'https://rappietoken.com/wp-content/uploads/2021/11/rappie-logo.png'} alt=\"\" />\r\n                    <span>Rappie Token</span>\r\n                </Link>\r\n                <div className=\"menu\">\r\n                    <ul>\r\n                        <li>\r\n                            <Link to={\"/exchange\"}>\r\n                                <span><i className=\"mdi mdi-repeat\"></i></span>\r\n                                <span className=\"nav-text\">Exchange</span>\r\n                            </Link>\r\n                        </li>\r\n                        <li><Link target={'_blank'} to={\"https://rappietoken.com/\"}>\r\n                            <span><i className=\"mdi mdi-web\"></i></span>\r\n                            <span className=\"nav-text\">Official Webpage</span>\r\n                        </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"sidebar-footer\">\r\n                    <div className=\"social\">\r\n                        <Link target={'_blank'} to={\"https://www.instagram.com/rappietoken\"}><i className=\"fa fa-instagram\"></i></Link>\r\n                        <Link target={'_blank'} to={\"https://twitter.com/rappietoken\"}><i className=\"fa fa-twitter\"></i></Link>\r\n                        <Link target={'_blank'} to={\"https://www.instagram.com/rappietoken\"}><i className=\"fa fa-facebook\"></i></Link>\r\n                    </div>\r\n                    <div className=\"copy_right\">\r\n                        © {new Date().getFullYear()} - Rappie Team\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import React, {useState, useEffect} from \"react\";\r\nimport BtcChart from \"../charts/btc\";\r\nimport LtcChart from \"../charts/ltc\";\r\nimport XrpChart from \"../charts/xrp\";\r\nimport PageTitle from \"../element/page-title\";\r\nimport Header2 from \"../layout/header2\";\r\nimport Sidebar from \"../layout/sidebar\";\r\nimport {useMetaMask} from 'metamask-react';\r\nimport {toast} from \"react-toastify\";\r\nimport Web3 from 'web3';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\n//initial library\r\nlet web3 = new Web3('https://bsc-dataseed1.binance.org:443');\r\n\r\nfunction Dashboard() {\r\n\r\n    const __min = 10;\r\n    const __bnb_address = '0x8666a9ef857561BA53B60501D27dccDa128163d6';\r\n\r\n    const [fromToken, setFromToken] = useState('bnb');\r\n    const [bnbCost, setBnbCost] = useState('0374.8');\r\n    const [ethInitial, setEthInitial] = useState('27400.3');\r\n    const [rptCost, setRptCost] = useState(0);\r\n    const [usdCost, setUsdCost] = useState(0);\r\n    const [bnbInitial, setBnbInitial] = useState(0);\r\n    const [btnText, setBtnText] = useState('Exchange Now');\r\n    const [btnText2, setBtnText2] = useState('Confirm Hash & Claim');\r\n    const [hash2, setHash2] = useState('');\r\n    const [trBool, setTrBool] = useState(false);\r\n    const [loader, setLoader] = useState(false);\r\n    const [trHash, setTrHash] = useState(false);\r\n\r\n    const _alert = (msg) => toast(msg);\r\n\r\n    //meta mask fuc\r\n    const {account, chainId, connect, ethereum, status} = useMetaMask();\r\n\r\n    useEffect(() => {\r\n        rptTousd({target: {value: 10}});\r\n        //update\r\n        fetch('https://api.binance.com/api/v3/ticker/price?symbol=BNBUSDT')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setBnbInitial(data.price);\r\n            });\r\n\r\n        fetch('https://api.binance.com/api/v3/ticker/price?symbol=ETHUSDT')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setEthInitial(data.price);\r\n            });\r\n\r\n    }, []);\r\n\r\n    const rptTousd = (e) => {\r\n        try {\r\n            let _val = parseInt(e.target.value);\r\n            let _bnb = (_val / bnbInitial).toFixed(4);\r\n            let _usd = _val;\r\n            ///ass\r\n            setRptCost(_val);\r\n            setBnbCost(_bnb);\r\n            setUsdCost(_usd);\r\n        } catch (e) {\r\n            //ignore\r\n            console.log('error');\r\n        }\r\n    };\r\n\r\n    //token function\r\n    const _sendTokenRaw = (hash) => {\r\n        web3.eth.getTransaction(hash).then(rs => {\r\n            //prepare server token sending\r\n            let _data = {bnbInitial, svalue: (web3.utils.fromWei(rs.value) * bnbInitial), ...rs};\r\n            //sending to server\r\n            setBtnText2('Verifying Hash...');\r\n            fetch('https://exchange.rappietoken.com/trx/claim', {\r\n                method: 'POST',\r\n                body: JSON.stringify(_data),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }).then(rex => rex.json()).then(rx => {\r\n                //place success and reward message here\r\n                _alert('Copy RPT Contract address and paste it on your wallet...done');\r\n                console.log(rx.data);\r\n                setLoader(false);\r\n                alert(\"You have successfully purchased (RPT), add contract address to your wallet to manage\");\r\n                setBtnText2('Confirm Hash & Claim');\r\n            }).catch(e => {\r\n                console.log(e);\r\n                setLoader(false);\r\n                _alert('Returned transaction...');\r\n            })\r\n\r\n        }).catch(e => {\r\n            console.log(e);\r\n            _alert('Error sending token, you can query it manually');\r\n        });\r\n    };\r\n\r\n    const _change = (t) => {\r\n        setFromToken(t.target.value);\r\n    };\r\n\r\n    const transferBuy = () => {\r\n        if (rptCost < __min) {\r\n            _alert('Unit too small for exchange, increase amount and try again');\r\n            return;\r\n        }\r\n        if (fromToken !== 'bnb') {\r\n            _alert('Token reversal propagating, try more bags in few time');\r\n            return;\r\n        }\r\n        setBtnText('Please wait...');\r\n        try {\r\n            connect().then(async (acc) => {\r\n                if (chainId === '0x38' || chainId === '56') {\r\n                    //start transaction\r\n                    ethereum.request({\r\n                        method: 'eth_sendTransaction',\r\n                        params: [\r\n                            {\r\n                                from: account,\r\n                                to: __bnb_address,\r\n                                value: web3.utils.toHex(web3.utils.toWei(bnbCost.toString(), 'ether')),\r\n                                chainID: 0x38,\r\n                            },\r\n                        ],\r\n                    }).then((txHash) => {\r\n                        //successful\r\n                        setTrBool(true);\r\n                        setTrHash(txHash);\r\n                        setBtnText('Swap Again');\r\n                        _alert('Transaction confirmed, preparing token (RPT)');\r\n                        _alert('Don\\'t close this window... preparing token <1min.');\r\n                        //send token\r\n                        setLoader(true);\r\n                        setTimeout(function () {\r\n                            _sendTokenRaw(txHash);\r\n                        }, 40000);\r\n                    }).catch((error) => {\r\n                        setBtnText('Exchange Now');\r\n                        _alert(error.message);\r\n                    });\r\n\r\n                } else {\r\n                    _alert('Switch to Smartchain network and try again');\r\n                }\r\n            }).catch((e) => {\r\n                _alert('Failed to connect to SmartChain');\r\n                console.log(e);\r\n            })\r\n            //window.web3 = new Web3('https://bsc-dataseed1.binance.org:443');\r\n        } catch (e) {\r\n            _alert('Error purchasing RPT');\r\n        }\r\n    };\r\n\r\n    //confirm hash\r\n    function confirmBuy() {\r\n        //process already purchased\r\n        setBtnText2('Please wait...');\r\n        if (hash2.toString().length > 0) {\r\n            _sendTokenRaw(hash2);\r\n        } else {\r\n            setBtnText2('Confirm Hash & Claim');\r\n            _alert(\"Invalid hash or empty\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <LoadingOverlay\r\n                active={loader}\r\n                spinner\r\n                text='Preparing your token, please wait...'>\r\n                <Header2/>\r\n                <Sidebar/>\r\n                <PageTitle/>\r\n                <div className=\"content-body\">\r\n                    <div className=\"container-u\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-8\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-6 col-lg-12 col-xxl-4\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-header\">\r\n                                                <h4 className=\"card-title\">Exchange</h4>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"buy-sell-widget\">\r\n                                                    <div className=\"currency_validate\">\r\n                                                        <div className=\"mb-3\">\r\n                                                            <label className=\"me-sm-2\">\r\n                                                                Choose Asset\r\n                                                            </label>\r\n                                                            <div className=\"input-group mb-3\">\r\n                                                                <select value={'bnb'} onChange={_change} name=\"assets\"\r\n                                                                        className=\"form-control\">\r\n                                                                    <option value=\"bnb\">\r\n                                                                        Smartchain (BNB)\r\n                                                                    </option>\r\n                                                                    <option value=\"rpt\">\r\n                                                                        Rappie Token (RPT)\r\n                                                                    </option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"mb-3\">\r\n                                                            <label className=\"me-sm-2\">\r\n                                                                Token Type\r\n                                                            </label>\r\n                                                            <div className=\"input-group mb-3\">\r\n                                                                <select value={'rpt'} className=\"form-control\"\r\n                                                                        name=\"tk_type\" onChange={() => {\r\n                                                                }}>\r\n                                                                    <option value=\"rpt\">\r\n                                                                        Rappie Token (RPT)\r\n                                                                    </option>\r\n                                                                    <option value=\"bnb\">\r\n                                                                        Smartchain (BNB)\r\n                                                                    </option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"mb-3\">\r\n                                                            <label className=\"me-sm-2\">\r\n                                                                Enter your amount\r\n                                                            </label>\r\n                                                            <div className=\"input-group\">\r\n                                                                <input\r\n                                                                    min={10}\r\n                                                                    value={rptCost}\r\n                                                                    maxLength={11}\r\n                                                                    onChange={(t) => rptTousd(t)}\r\n                                                                    type=\"number\"\r\n                                                                    name=\"rpt_amount\"\r\n                                                                    className=\"form-control\"\r\n                                                                    placeholder=\"1 RPT\"\r\n                                                                />\r\n                                                                <input\r\n                                                                    value={bnbCost}\r\n                                                                    disabled={true}\r\n                                                                    type=\"number\"\r\n                                                                    name=\"rpt_amount\"\r\n                                                                    className=\"form-control\"\r\n                                                                    placeholder=\"0 BNB\"\r\n                                                                />\r\n                                                                <input\r\n                                                                    value={usdCost}\r\n                                                                    maxLength={11}\r\n                                                                    onChange={(t) => rptTousd(t)}\r\n                                                                    type=\"number\"\r\n                                                                    name=\"usd_amount\"\r\n                                                                    className=\"form-control\"\r\n                                                                    placeholder=\"1 USD\"\r\n                                                                />\r\n                                                            </div>\r\n                                                            <p></p>\r\n                                                        </div>\r\n                                                        <button\r\n                                                            onClick={() => transferBuy()}\r\n                                                            type=\"submit\"\r\n                                                            name=\"submit\"\r\n                                                            className=\"btn btn-outline-secondary w-100\">\r\n                                                            {btnText}\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-xl-6 col-lg-12 col-xxl-8\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-header\">\r\n                                                <h4 className=\"card-title\">\r\n                                                    Transaction{\" \"}\r\n                                                </h4>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"transaction-widget\">\r\n                                                    <ul className=\"list-unstyled\">\r\n                                                        {(trHash) ? <li className=\"d-flex\">\r\n                                                        <span className=\"sold-thumb\">\r\n                                                            <i className=\"la la-arrow-circle-right\"></i>\r\n                                                        </span>\r\n                                                            <div className=\"flex-grow-1\" style={{overflow: 'hidden'}}>\r\n                                                                <p>\r\n                                                                    <small>\r\n                                                                        {new Date().getUTCDate() + \" \" + monthNames[new Date().getUTCMonth()]},{\" \"},{\" \"}\r\n                                                                        {new Date().getFullYear()}{\" \"}\r\n                                                                    </small>\r\n                                                                    <small>\r\n                                                                        {new Date().getMinutes() + \":\" + new Date().getHours()}\r\n                                                                    </small>\r\n                                                                </p>\r\n                                                                <p className=\"wallet-address text-dark\">\r\n                                                                    <code>{trHash}</code>\r\n                                                                </p>\r\n                                                            </div>\r\n                                                        </li> : \"\"}\r\n\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-header\">\r\n                                                <h4 className=\"card-title\">\r\n                                                    Reclaim Transaction\r\n                                                </h4>\r\n                                            </div>\r\n\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"mb-3\">\r\n                                                    <label className=\"me-sm-2\">\r\n                                                        Enter your hash\r\n                                                    </label>\r\n                                                    <div className=\"input-group\">\r\n                                                        <input\r\n                                                            value={hash2}\r\n                                                            onChange={e => setHash2(e.target.value)}\r\n                                                            id={'hash_'}\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"Hash...\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <button\r\n                                                    onClick={() => confirmBuy()}\r\n                                                    type=\"submit\"\r\n                                                    name=\"submit\"\r\n                                                    className=\"btn btn-outline-secondary w-100\">\r\n                                                    {btnText2}\r\n                                                </button>\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12 col-xxl-12\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-xl-3\">\r\n                                                <div className=\"widget-card\">\r\n                                                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                                                        <div className=\"widget-stat\">\r\n                                                            <div className=\"coin-title\">\r\n                                                                <h5 className=\"d-inline-block ms-2 mb-3\">\r\n                                                                    Rappie Tokken (RPT)\r\n                                                                </h5>\r\n                                                            </div>\r\n                                                            <h4>\r\n                                                                USD {parseInt('1')}\r\n                                                            </h4>\r\n                                                        </div>\r\n                                                        <LtcChart/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-xl-3\">\r\n                                                <div className=\"widget-card\">\r\n                                                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                                                        <div className=\"widget-stat\">\r\n                                                            <div className=\"coin-title\">\r\n                                                                <h5 className=\"d-inline-block ms-2 mb-3\">\r\n                                                                    SmartChain (BNB)\r\n                                                                </h5>\r\n                                                            </div>\r\n                                                            <h4>\r\n                                                                USD {parseInt(bnbInitial)}\r\n                                                            </h4>\r\n                                                        </div>\r\n                                                        <BtcChart/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-xl-3\">\r\n                                                <div className=\"widget-card\">\r\n                                                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                                                        <div className=\"widget-stat\">\r\n                                                            <div className=\"coin-title\">\r\n                                                                <h5 className=\"d-inline-block ms-2 mb-3\">\r\n                                                                    Ethereum\r\n                                                                </h5>\r\n                                                            </div>\r\n                                                            <h4>\r\n                                                                USD {parseInt(ethInitial)}\r\n                                                            </h4>\r\n                                                        </div>\r\n                                                        <LtcChart/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-xl-3\">\r\n                                                <div className=\"widget-card\">\r\n                                                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                                                        <div className=\"widget-stat\">\r\n                                                            <div className=\"coin-title\">\r\n                                                            <span>\r\n                                                                <i className=\"cc USDT-alt\"></i>\r\n                                                            </span>\r\n                                                                <h5 className=\"d-inline-block ms-2 mb-3\">\r\n                                                                    USDT Dollar\r\n                                                                </h5>\r\n                                                            </div>\r\n                                                            <h4>\r\n                                                                USD 1 {\" \"}\r\n                                                            </h4>\r\n                                                        </div>\r\n                                                        <XrpChart/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </LoadingOverlay>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Dashboard from \"./pages/exchange\";\r\nclass Index extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                {/* <BrowserRouter> */}\r\n                <BrowserRouter basename=\"/exchange\">\r\n                    <div id=\"main-wrapper\">\r\n                        <Switch>\r\n                            <Route path=\"/\" exact component={Dashboard} />\r\n                        </Switch>\r\n                    </div>\r\n                </BrowserRouter>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;\r\n","import React from 'react';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './css/style.css';\r\nimport Dashboard from './jsx';\r\nimport {Lines, Circle} from 'react-preloaders';\r\nimport {ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport {MetaMaskProvider} from \"metamask-react\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <MetaMaskProvider>\r\n                <Dashboard/>\r\n                <Circle/>\r\n                <ToastContainer theme={'dark'} position=\"top-center\" autoClose={5000} hideProgressBar={false}\r\n                                newestOnTop={false} closeOnClick={true}/>\r\n            </MetaMaskProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}